// Place all the behaviors and hooks related to the matching controller here.
// All this logic will automatically be available in application.js.

//= require remark/global/vendor/raty/jquery.raty.js
//= require remark/global/js/Plugin/raty.js
//= require remark/global/vendor/blueimp-tmpl/tmpl.js
//= require remark/global/vendor/blueimp-canvas-to-blob/canvas-to-blob.js
//= require remark/global/vendor/blueimp-load-image/load-image.all.min.js
//= require remark/global/vendor/blueimp-file-upload/jquery.fileupload.js
//= require remark/global/vendor/blueimp-file-upload/jquery.fileupload-process.js
//= require remark/global/vendor/blueimp-file-upload/jquery.fileupload-image.js
//= require remark/global/vendor/blueimp-file-upload/jquery.fileupload-audio.js
//= require remark/global/vendor/blueimp-file-upload/jquery.fileupload-video.js
//= require remark/global/vendor/blueimp-file-upload/jquery.fileupload-validate.js
//= require remark/global/vendor/blueimp-file-upload/jquery.fileupload-ui.js
//= require remark/global/vendor/dropify/dropify.min.js
//= require remark/global/js/Plugin/dropify.js
//= require remark/global/vendor/bootstrap-tokenfield/bootstrap-tokenfield.min.js

//= require remark/global/js/Plugin/bootstrap-tokenfield.js
//= require remark/global/js/Plugin/bootstrap-tagsinput.js

//= require remark/global/vendor/typeahead-js/bloodhound.min.js
//= require remark/global/vendor/typeahead-js/typeahead.jquery.min.js

var serializeWidgetMap = function(items) {
    console.log(items);
};

$('.grid-stack').on('change', function(event, items) {
  for (i = 0; i < items.length; i++) {
    save_properties_widget(items[i]);
}
serializeWidgetMap(items)
});

// Example Tokenfield With Typeahead
  // ---------------------------------
  (function() {
    var engine = new Bloodhound({
      local: [
        <%= Tag.all.map{|t| "{value :'#{t}'}"}.join(",") %>
      ],
      datumTokenizer: Bloodhound.tokenizers.obj.whitespace('value'),
      queryTokenizer: Bloodhound.tokenizers.whitespace
    });

    engine.initialize();

    $('#project_tags').tokenfield({
      typeahead: [null, {
        name: 'engine',
        displayKey: 'value',
        source: engine.ttAdapter()
      }]
    });
  })();

  function save_properties_widget(widget){
    var width = widget.width
    var height = widget.height
    var x = widget.x
    var y = widget.y
    var id = widget.id
    var obj={}
    obj['_method']="put"
    obj['widget'] = {"id" : id, "width" : width, "height" : height, "pos_x" : x, "pos_y" : y}

    $.ajax({
    type: "PUT",
    dataType: "script",
    url: window.location.href + "/widgets/" + id,
    contentType: 'application/json',
    data: JSON.stringify(obj)
    }).done(function( msg )
    {
        alert( "Data Saved: ", msg );
    });

  }


  $(".btn-reply").click(function(){
    $(this).parents(".comment-body:first").find(".comment-reply:first").show();
  });

    $(".btn-reply-close").click(function(){
      $(this).parents(".comment-body:first").find(".comment-reply:first").hide();
  });

    $("#project_use_open_hub_image").change(function(){
      $("#container-upload").toggleClass("hide");
      $("#container-openhub").toggleClass("hide");
    });
